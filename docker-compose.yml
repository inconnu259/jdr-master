networks:
  nct-networks:
    driver: bridge
    ipam:
      driver: default
      config:
        - subnet: "${NETWORK_IP}.0/24"

services:

  nginx:
    container_name: nginx
    image: nginx:stable-alpine-slim
    ports:
      - ${NGINX_PORT}:80
    environment:
      TZ: ${TZ}
    volumes:
      # conf
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf
      # certificates
      - ./docker/nginx/ssl:/etc/nginx/ssl
      # php files
      - ./api:/var/www/api
    logging:
      driver: "json-file"
      options:
        max-file: ${LOG_FILES_COUNT}
        max-size: ${LOG_FILES_SIZE}
    restart: always
    depends_on:
      - api
      - client
      - mailer
      - adminer
    networks:
      nct-networks:
        ipv4_address: "${NETWORK_IP}.2"

  database:
    container_name: database
    image: postgres:alpine
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_DATABASE}
      TZ: ${TZ}
    volumes:
      - ./docker/DB/:/var/lib/postgres/
    logging:
      driver: "json-file"
      options:
        max-file: ${LOG_FILES_COUNT}
        max-size: ${LOG_FILES_SIZE}
    restart: always
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER} -d ${DB_DATABASE}"]
      interval: 2s
      retries: 60
    networks:
      nct-networks:
        ipv4_address: "${NETWORK_IP}.3"

  api:
    container_name: api
    build:
      context: .
      dockerfile: docker/Dockerfile_api
    environment:
      APP_ENV: dev
      DB_USER: ${DB_USER}
      DB_PASSWORD: ${DB_PASSWORD}
      DB_DATABASE: ${DB_DATABASE}
      TZ: ${TZ}
      JWT_PASSPHRASE: ${JWT_PASSPHRASE}
      DUAL_FACTOR_AUTH_TOKEN_VALIDITY_IN_MINUTES: ${DUAL_FACTOR_AUTH_TOKEN_VALIDITY_IN_MINUTES}
      DUAL_FACTOR_AUTH_REGENERATE_INTERVAL_IN_SECONDS: ${DUAL_FACTOR_AUTH_REGENERATE_INTERVAL_IN_SECONDS}
      ACCESS_TOKEN_VALIDITY_IN_HOURS: ${ACCESS_TOKEN_VALIDITY_IN_HOURS}
      REGISTRATION_TOKEN_VALIDITY_IN_HOURS: ${REGISTRATION_TOKEN_VALIDITY_IN_HOURS}
      REGISTRATION_TOKEN_REGENERATE_INTERVAL_IN_SECONDS: ${REGISTRATION_TOKEN_REGENERATE_INTERVAL_IN_SECONDS}
      RESET_PASSWORD_TOKEN_VALIDITY_IN_HOURS: ${RESET_PASSWORD_TOKEN_VALIDITY_IN_HOURS}
      MAILER_DSN: ${MAILER_DSN}
      MAIL_FROM: ${MAIL_FROM}
      APP_URL: ${APP_URL}
      NB_LASTNAME_CHAR_IN_USERNAME: ${NB_LASTNAME_CHAR_IN_USERNAME}
      STRIPE_SECRET: ${STRIPE_SECRET}
      STRIPE_WEBHOOK_SECRET: ${STRIPE_WEBHOOK_SECRET}
      MAX_INSTALLER_FILE_SIZE_IN_MB: ${MAX_INSTALLER_FILE_SIZE_IN_MB}
    volumes:
      - ./api:/var/www/api
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: ${LOG_FILES_COUNT}
        max-size: ${LOG_FILES_SIZE}
    depends_on:
      - database
    networks:
      nct-networks:
        ipv4_address: "${NETWORK_IP}.4"

  client:
    container_name: client
    build:
      context: .
      dockerfile: docker/Dockerfile_client_${CLIENT_IMAGE_TAG}
    environment:
      STRIPE_PUBLIC_KEY: ${STRIPE_PUBLIC_KEY}
    volumes:
      - ./client:/var/www/client
    restart: always
    logging:
      driver: "json-file"
      options:
        max-file: ${LOG_FILES_COUNT}
        max-size: ${LOG_FILES_SIZE}
    networks:
      nct-networks:
        ipv4_address: "${NETWORK_IP}.5"

  mailer:
    container_name: mailer
    image: mailhog/mailhog
    restart: always
    networks:
      nct-networks:
        ipv4_address: "${NETWORK_IP}.6"

  adminer:
    container_name: adminer
    image: adminer
    environment:
      ADMINER_DEFAULT_SERVER: database
      TZ: ${TZ}
      UPLOAD_LIMIT: 8G
      MAX_EXECUTION_TIME: 3600
      ADMINER_ABSOLUTE_URI: htt://localhost/adminer
    restart: always
    depends_on:
      - database
    networks:
      nct-networks:
        ipv4_address: "${NETWORK_IP}.7"
